// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Entity.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Destinations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Distance = 20000,
                            Name = "New Orleans"
                        },
                        new
                        {
                            Id = 2,
                            Distance = 122000,
                            Name = "Baton Rouge"
                        },
                        new
                        {
                            Id = 3,
                            Distance = 196000,
                            Name = "Lafayette"
                        },
                        new
                        {
                            Id = 4,
                            Distance = 70000,
                            Name = "Houma"
                        },
                        new
                        {
                            Id = 5,
                            Distance = 54000,
                            Name = "Kansas City"
                        });
                });

            modelBuilder.Entity("Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DeliveryStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.HasIndex("ProductId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Height = 50,
                            Length = 50,
                            Name = "Jerboa",
                            Price = 500,
                            ProductTypeId = 3,
                            Weight = 5123,
                            Width = 50
                        },
                        new
                        {
                            Id = 2,
                            Height = 50,
                            Length = 50,
                            Name = "Cage",
                            Price = 55,
                            ProductTypeId = 2,
                            Weight = 5000,
                            Width = 50
                        },
                        new
                        {
                            Id = 3,
                            Height = 24,
                            Length = 37,
                            Name = "Pills",
                            Price = 15,
                            ProductTypeId = 4,
                            Weight = 2000,
                            Width = 43
                        },
                        new
                        {
                            Id = 4,
                            Height = 50,
                            Length = 20,
                            Name = "Feeding Station",
                            Price = 4499,
                            ProductTypeId = 1,
                            Weight = 4500,
                            Width = 100
                        });
                });

            modelBuilder.Entity("Entity.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<TimeSpan>("ProcessingTime")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Machinery",
                            ProcessingTime = new TimeSpan(0, 0, 30, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            Name = "Furniture",
                            ProcessingTime = new TimeSpan(0, 0, 45, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            Name = "Animals",
                            ProcessingTime = new TimeSpan(0, 1, 30, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            Name = "Medicine",
                            ProcessingTime = new TimeSpan(0, 0, 15, 0, 0)
                        });
                });

            modelBuilder.Entity("Entity.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FreeDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MaxHeight")
                        .HasColumnType("int");

                    b.Property<int>("MaxLength")
                        .HasColumnType("int");

                    b.Property<int>("MaxWeight")
                        .HasColumnType("int");

                    b.Property<int>("MaxWidth")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FreeDate = new DateTime(2021, 6, 25, 3, 44, 24, 562, DateTimeKind.Local).AddTicks(9946),
                            MaxHeight = 50,
                            MaxLength = 50,
                            MaxWeight = 5500,
                            MaxWidth = 50,
                            Name = "McLaren MCL34",
                            Speed = 350,
                            VehicleTypeId = 4
                        },
                        new
                        {
                            Id = 2,
                            FreeDate = new DateTime(2021, 6, 25, 3, 44, 24, 565, DateTimeKind.Local).AddTicks(2455),
                            MaxHeight = 30,
                            MaxLength = 40,
                            MaxWeight = 4654,
                            MaxWidth = 45,
                            Name = "Ferrari SF1000",
                            Speed = 354,
                            VehicleTypeId = 4
                        },
                        new
                        {
                            Id = 3,
                            FreeDate = new DateTime(2021, 6, 25, 3, 44, 24, 565, DateTimeKind.Local).AddTicks(2485),
                            MaxHeight = 30,
                            MaxLength = 40,
                            MaxWeight = 4550,
                            MaxWidth = 45,
                            Name = "Ford Mustang",
                            Speed = 215,
                            VehicleTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            FreeDate = new DateTime(2021, 6, 25, 3, 44, 24, 565, DateTimeKind.Local).AddTicks(2490),
                            MaxHeight = 65,
                            MaxLength = 21,
                            MaxWeight = 75000,
                            MaxWidth = 110,
                            Name = "Ford Transit",
                            Speed = 135,
                            VehicleTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            FreeDate = new DateTime(2021, 6, 25, 3, 44, 24, 565, DateTimeKind.Local).AddTicks(2494),
                            MaxHeight = 210,
                            MaxLength = 450,
                            MaxWeight = 2025000,
                            MaxWidth = 180,
                            Name = "Mercedes-Benz Actros 6",
                            Speed = 105,
                            VehicleTypeId = 1
                        });
                });

            modelBuilder.Entity("Entity.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Truck"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Van"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Car"
                        },
                        new
                        {
                            Id = 4,
                            Name = "F1 Car"
                        });
                });

            modelBuilder.Entity("ProductTypeVehicleType", b =>
                {
                    b.Property<int>("ProductTypesId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleTypesId")
                        .HasColumnType("int");

                    b.HasKey("ProductTypesId", "VehicleTypesId");

                    b.HasIndex("VehicleTypesId");

                    b.ToTable("ProductTypeVehicleType");

                    b.HasData(
                        new
                        {
                            ProductTypesId = 1,
                            VehicleTypesId = 1
                        },
                        new
                        {
                            ProductTypesId = 2,
                            VehicleTypesId = 1
                        },
                        new
                        {
                            ProductTypesId = 4,
                            VehicleTypesId = 1
                        },
                        new
                        {
                            ProductTypesId = 2,
                            VehicleTypesId = 2
                        },
                        new
                        {
                            ProductTypesId = 4,
                            VehicleTypesId = 2
                        },
                        new
                        {
                            ProductTypesId = 4,
                            VehicleTypesId = 3
                        },
                        new
                        {
                            ProductTypesId = 3,
                            VehicleTypesId = 4
                        },
                        new
                        {
                            ProductTypesId = 4,
                            VehicleTypesId = 4
                        });
                });

            modelBuilder.Entity("Entity.Order", b =>
                {
                    b.HasOne("Entity.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");

                    b.Navigation("Product");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Entity.Product", b =>
                {
                    b.HasOne("Entity.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("Entity.Vehicle", b =>
                {
                    b.HasOne("Entity.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("ProductTypeVehicleType", b =>
                {
                    b.HasOne("Entity.ProductType", null)
                        .WithMany()
                        .HasForeignKey("ProductTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.VehicleType", null)
                        .WithMany()
                        .HasForeignKey("VehicleTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
